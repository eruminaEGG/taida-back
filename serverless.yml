# serverless.yml
service: taida-back
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: python3.11
  architecture: arm64
  timeout: 30
  iam:
    role:
      Fn::GetAtt:
        - LambdaExecutionRole
        - Arn

  region: ap-northeast-1
  stage: ${opt:stage, 'dev'}

  # API Gateway
  apiName: ${self:custom.apiName}

  environment:
    STAGE_NAME: ${self:provider.stage}
    DOMAIN: ${env:DOMAIN}

    USER_TABLE_NAME: ${self:custom.userTableName}

    # Google OAuth
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}

package:
  include:
    - taida_back/**
  exclude:
    - "**"

custom:
  prefix: ${self:service}-${self:provider.stage}

  # DynamoDB
  userTableName: ${self:custom.prefix}-userTable

  # API Gateway
  apiName: ${self:custom.prefix}-api

  # lambda
  executeApiArn: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/${self:provider.stage}

  # Cognito
  guildAdminRole: ${self:custom.prefix}-GuildAdminRole

functions: ${file(./serverless/functions.yml)}

resources:
  - ${file(./serverless/resources/cognito.yml)}
  - ${file(./serverless/resources/dynamodb.yml)}
  - ${file(./serverless/resources/iam.yml)}
